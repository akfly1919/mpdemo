<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fly.wechat.mpdemo.match.dao.PlayerMapper" >
  <resultMap id="BaseResultMap" type="com.fly.wechat.mpdemo.match.model.Player" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="unionid" property="unionid" jdbcType="VARCHAR" />
    <result column="bri" property="bri" jdbcType="TIMESTAMP" />
    <result column="height" property="height" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
    <result column="pos" property="pos" jdbcType="VARCHAR" />
    <result column="lq_desc" property="lqDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, openid, unionid, bri, height, weight, pos, lq_desc
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fly.wechat.mpdemo.match.model.PlayerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from player
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from player
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from player
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fly.wechat.mpdemo.match.model.Player" >
    insert into player (id, name, openid, 
      unionid, bri, height, 
      weight, pos, lq_desc
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, 
      #{unionid,jdbcType=VARCHAR}, #{bri,jdbcType=TIMESTAMP}, #{height,jdbcType=INTEGER}, 
      #{weight,jdbcType=INTEGER}, #{pos,jdbcType=VARCHAR}, #{lqDesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fly.wechat.mpdemo.match.model.Player" >
    insert into player
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="unionid != null" >
        unionid,
      </if>
      <if test="bri != null" >
        bri,
      </if>
      <if test="height != null" >
        height,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="pos != null" >
        pos,
      </if>
      <if test="lqDesc != null" >
        lq_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null" >
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="bri != null" >
        #{bri,jdbcType=TIMESTAMP},
      </if>
      <if test="height != null" >
        #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="pos != null" >
        #{pos,jdbcType=VARCHAR},
      </if>
      <if test="lqDesc != null" >
        #{lqDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fly.wechat.mpdemo.match.model.Player" >
    update player
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null" >
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="bri != null" >
        bri = #{bri,jdbcType=TIMESTAMP},
      </if>
      <if test="height != null" >
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="pos != null" >
        pos = #{pos,jdbcType=VARCHAR},
      </if>
      <if test="lqDesc != null" >
        lq_desc = #{lqDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fly.wechat.mpdemo.match.model.Player" >
    update player
    set name = #{name,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=VARCHAR},
      bri = #{bri,jdbcType=TIMESTAMP},
      height = #{height,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      pos = #{pos,jdbcType=VARCHAR},
      lq_desc = #{lqDesc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>